webpackJsonp([45],{1043:function(n,e){n.exports="# readJsonSync(file, [options])\n\nReads a JSON file and then parses it into an object. `options` are the same\nthat you'd pass to [`jsonFile.readFileSync`](https://github.com/jprichardson/node-jsonfile#readfilesyncfilename-options).\n\n**Alias:** `readJSONSync()`\n\n- `file` `<String>`\n- `options` `<Object>`\n\n## Example:\n\n```js\nconst fs = require('fs-extra')\n\nconst packageObj = fs.readJsonSync('./package.json')\nconsole.log(packageObj.version) // => 2.0.0\n```\n\n---\n\n`readJsonSync()` can take a `throws` option set to `false` and it won't throw if the JSON is invalid. Example:\n\n```js\nconst fs = require('fs-extra')\n\nconst file = '/tmp/some-invalid.json'\nconst data = '{not valid JSON'\nfs.writeFileSync(file, data)\n\nconst obj = fs.readJsonSync(file, { throws: false })\nconsole.log(obj) // => null\n```\n"},886:function(n,e,t){var o=t(15),a=t(45),s=t(286).PageRenderer;s.__esModule&&(s=s.default);var i=a({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:t(1043)}},componentWillMount:function(){},render:function(){return o.createElement(s,Object.assign({},this.props,{content:this.state.content}))}});i.__catalog_loader__=!0,n.exports=i}});
//# sourceMappingURL=45.7b2fb171.chunk.js.map