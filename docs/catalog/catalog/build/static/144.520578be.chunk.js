webpackJsonp([144],{787:function(e,n,t){var i=t(15),r=t(45),o=t(286).PageRenderer;o.__esModule&&(o=o.default);var s=r({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:t(944)}},componentWillMount:function(){},render:function(){return i.createElement(o,Object.assign({},this.props,{content:this.state.content}))}});s.__catalog_loader__=!0,e.exports=s},944:function(e,n){e.exports="# copySync(src, dest, [options])\n\nCopy a file or directory. The directory can have contents. Like `cp -r`.\n\n- `src` `<String>`\n- `dest` `<String>`\n- `options` `<Object>`\n  - `overwrite` `<boolean>`: overwrite existing file or directory, default is `true`. _Note that the copy operation will silently fail if you set this to `false` and the destination exists._ Use the `errorOnExist` option to change this behavior.\n  - `errorOnExist` `<boolean>`: when `overwrite` is `false` and the destination exists, throw an error. Default is `false`.\n  - `dereference` `<boolean>`: dereference symlinks, default is `false`.\n  - `preserveTimestamps` `<boolean>`: will set last modification and access times to the ones of the original source files, default is `false`.\n  - `filter` `<Function>`: Function to filter copied files. Return `true` to include, `false` to exclude. This can also be a RegExp, however this is deprecated (See [issue #239](https://github.com/jprichardson/node-fs-extra/issues/239) for background).\n\n## Example:\n\n```js\nconst fs = require('fs-extra')\n\n// copy file\nfs.copySync('/tmp/myfile', '/tmp/mynewfile')\n\n// copy directory, even if it has subdirectories or files\nfs.copySync('/tmp/mydir', '/tmp/mynewdir')\n```\n\n**Using filter function**\n\n```js\nconst fs = require('fs-extra')\n\nconst filterFunc = (src, dest) => {\n  // your logic here\n  // it will be copied if return true\n}\n\nfs.copySync('/tmp/mydir', '/tmp/mynewdir', { filter: filterFunc })\n```\n"}});
//# sourceMappingURL=144.520578be.chunk.js.map