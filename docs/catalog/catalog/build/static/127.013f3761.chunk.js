webpackJsonp([127],{804:function(e,t,n){var o=n(15),s=n(45),r=n(286).PageRenderer;r.__esModule&&(r=r.default);var a=s({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:n(961)}},componentWillMount:function(){},render:function(){return o.createElement(r,Object.assign({},this.props,{content:this.state.content}))}});a.__catalog_loader__=!0,e.exports=a},961:function(e,t){e.exports="# outputJsonSync(file, object, [options])\n\nAlmost the same as [`writeJsonSync`](writeJson-sync.md), except that if the directory does not exist, it's created.\n\n**Alias:** `outputJSONSync()`\n\n- `file` `<String>`\n- `object` `<Object>`\n- `options` `<Object>`\n  - `spaces` `<Number|String>` Number of spaces to indent; or a string to use for indentation (i.e. pass `'\\t'` for tab indentation). See [the docs](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#The_space_argument) for more info.\n  - `EOL` `<String>` Set EOL character. Default is `\\n`.\n  - `replacer` [JSON replacer](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#The_replacer_parameter)\n  - Also accepts [`fs.writeFileSync` options](https://nodejs.org/api/fs.html#fs_fs_writefilesync_file_data_options)\n\n## Example:\n\n```js\nconst fs = require('fs-extra')\n\nconst file = '/tmp/this/path/does/not/exist/file.json'\nfs.outputJsonSync(file, {name: 'JP'})\n\nconst data = fs.readJsonSync(file)\nconsole.log(data.name) // => JP\n```\n"}});
//# sourceMappingURL=127.013f3761.chunk.js.map