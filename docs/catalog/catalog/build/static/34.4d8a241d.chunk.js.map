{"version":3,"sources":["webpack:///static/34.4d8a241d.chunk.js","webpack:////Users/roca/o-rango/o-rango-components/components/o-button/node_modules/inflight/README.md","webpack:////Users/roca/o-rango/o-rango-components/components/o-button/node_modules/inflight/README.md?ca8d"],"names":["webpackJsonp","1054","module","exports","897","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,QAAA,wgCDSMC,IACA,SAAUF,EAAQC,EAASE,GETjC,GAAAC,GAAgBD,EAAQ,IACxBE,EAA2BF,EAAQ,IACnCG,EAAuBH,EAAQ,KAASG,YACxCA,GAAAC,aACAD,IAAAE,QAEA,IAAAC,GAAAJ,GACAK,YAAA,sBACAC,gBAAA,WACA,OAAgBC,QAAST,EAAQ,QAEjCU,mBAAA,aAUAC,OAAA,WACA,MAAAV,GAAAW,cAAAT,EAAAU,OAAAC,UAAiEC,KAAAC,OAAeP,QAAAM,KAAAE,MAAAR,aAGhFH,GAAAY,oBAAA,EACArB,EAAAC,QAAAQ","file":"static/34.4d8a241d.chunk.js","sourcesContent":["webpackJsonp([34],{\n\n/***/ 1054:\n/***/ (function(module, exports) {\n\nmodule.exports = \"# inflight\\n\\nAdd callbacks to requests in flight to avoid async duplication\\n\\n## USAGE\\n\\n```javascript\\nvar inflight = require('inflight')\\n\\n// some request that does some stuff\\nfunction req(key, callback) {\\n  // key is any random string.  like a url or filename or whatever.\\n  //\\n  // will return either a falsey value, indicating that the\\n  // request for this key is already in flight, or a new callback\\n  // which when called will call all callbacks passed to inflightk\\n  // with the same key\\n  callback = inflight(key, callback)\\n\\n  // If we got a falsey value back, then there's already a req going\\n  if (!callback) return\\n\\n  // this is where you'd fetch the url or whatever\\n  // callback is also once()-ified, so it can safely be assigned\\n  // to multiple events etc.  First call wins.\\n  setTimeout(function() {\\n    callback(null, key)\\n  }, 100)\\n}\\n\\n// only assigns a single setTimeout\\n// when it dings, all cbs get called\\nreq('foo', cb1)\\nreq('foo', cb2)\\nreq('foo', cb3)\\nreq('foo', cb4)\\n```\\n\"\n\n/***/ }),\n\n/***/ 897:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(15);\n    var createReactClass = __webpack_require__(45);\n    var PageRenderer = __webpack_require__(286).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(1054)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../../../../docs/catalog/node_modules/raw-loader/index.js!./README.md\", function() {\n            component.setState({\n              content: require(\"!!../../../../docs/catalog/node_modules/raw-loader/index.js!./README.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/34.4d8a241d.chunk.js","module.exports = \"# inflight\\n\\nAdd callbacks to requests in flight to avoid async duplication\\n\\n## USAGE\\n\\n```javascript\\nvar inflight = require('inflight')\\n\\n// some request that does some stuff\\nfunction req(key, callback) {\\n  // key is any random string.  like a url or filename or whatever.\\n  //\\n  // will return either a falsey value, indicating that the\\n  // request for this key is already in flight, or a new callback\\n  // which when called will call all callbacks passed to inflightk\\n  // with the same key\\n  callback = inflight(key, callback)\\n\\n  // If we got a falsey value back, then there's already a req going\\n  if (!callback) return\\n\\n  // this is where you'd fetch the url or whatever\\n  // callback is also once()-ified, so it can safely be assigned\\n  // to multiple events etc.  First call wins.\\n  setTimeout(function() {\\n    callback(null, key)\\n  }, 100)\\n}\\n\\n// only assigns a single setTimeout\\n// when it dings, all cbs get called\\nreq('foo', cb1)\\nreq('foo', cb2)\\nreq('foo', cb3)\\nreq('foo', cb4)\\n```\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!/Users/roca/o-rango/o-rango-components/components/o-button/node_modules/inflight/README.md\n// module id = 1054\n// module chunks = 34","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../../../../docs/catalog/node_modules/raw-loader/index.js!./README.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../../../../docs/catalog/node_modules/raw-loader/index.js!./README.md\", function() {\n            component.setState({\n              content: require(\"!!../../../../docs/catalog/node_modules/raw-loader/index.js!./README.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/roca/o-rango/o-rango-components/components/o-button/node_modules/inflight/README.md\n// module id = 897\n// module chunks = 34"],"sourceRoot":""}