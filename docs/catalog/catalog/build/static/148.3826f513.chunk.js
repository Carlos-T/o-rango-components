webpackJsonp([148],{783:function(e,t,o){var r=o(15),s=o(45),i=o(286).PageRenderer;i.__esModule&&(i=i.default);var n=s({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:o(940)}},componentWillMount:function(){},render:function(){return r.createElement(i,Object.assign({},this.props,{content:this.state.content}))}});n.__catalog_loader__=!0,e.exports=n},940:function(e,t){e.exports="## Changelog\n##### 2.5.7 - 2018.05.26\n- Get rid of reserved variable name `final`, related [#400](https://github.com/zloirock/core-js/issues/400)\n\n##### 2.5.6 - 2018.05.07\n- Forced replace native `Promise` in V8 6.6 (Node 10 and Chrome 66) because of [a bug with resolving custom thenables](https://bugs.chromium.org/p/chromium/issues/detail?id=830565)\n- Added a workaround for usage buggy native LG WebOS 2 `Promise` in microtask implementation, [#396](https://github.com/zloirock/core-js/issues/396)\n- Added modern version internal debugging information about used versions\n\n##### 2.5.5 - 2018.04.08\n- Fix some edge cases of `Reflect.set`, [#392](https://github.com/zloirock/core-js/issues/392) and [#393](https://github.com/zloirock/core-js/issues/393)\n\n##### 2.5.4 - 2018.03.27\n- Fixed one case of deoptimization built-in iterators in V8, related [#377](https://github.com/zloirock/core-js/issues/377)\n- Fixed some cases of iterators feature detection, [#368](https://github.com/zloirock/core-js/issues/368)\n- Fixed manually entered NodeJS domains issue in `Promise`, [#367](https://github.com/zloirock/core-js/issues/367)\n- Fixed `Number.{parseInt, parseFloat}` entry points\n- Fixed `__(define|lookup)[GS]etter__` import in the `library` version\n\n##### 2.5.3 - 2017.12.12\n- Fixed calling `onunhandledrejectionhandler` multiple times for one `Promise` chain, [#318](https://github.com/zloirock/core-js/issues/318)\n- Forced replacement of `String#{padStart, padEnd}` in Safari 10 because of [a bug](https://bugs.webkit.org/show_bug.cgi?id=161944), [#280](https://github.com/zloirock/core-js/issues/280)\n- Fixed `Array#@@iterator` in a very rare version of `WebKit`, [#236](https://github.com/zloirock/core-js/issues/236) and [#237](https://github.com/zloirock/core-js/issues/237)\n- One more [#345](https://github.com/zloirock/core-js/issues/345)-related fix\n\n##### 2.5.2 - 2017.12.09\n- `MutationObserver` no longer used for microtask implementation in iOS Safari because of bug with scrolling, [#339](https://github.com/zloirock/core-js/issues/339)\n- Fixed `JSON.stringify(undefined, replacer)` case in the wrapper from the `Symbol` polyfill, [#345](https://github.com/zloirock/core-js/issues/345)\n- `Array()` calls changed to `new Array()` for V8 optimisation\n\n##### 2.5.1 - 2017.09.01\n- Updated `Promise#finally` per [tc39/proposal-promise-finally#37](https://github.com/tc39/proposal-promise-finally/issues/37)\n- Optimized usage of some internal helpers for reducing size of `shim` version\n- Fixed some entry points for virtual methods\n\n##### 2.5.0 - 2017.08.05\n- Added `Promise#finally` [stage 3 proposal](https://github.com/tc39/proposal-promise-finally), [#225](https://github.com/zloirock/core-js/issues/225)\n- Added `Promise.try` [stage 1 proposal](https://github.com/tc39/proposal-promise-try)\n- Added `Array#flatten` and `Array#flatMap` [stage 1 proposal](https://tc39.github.io/proposal-flatMap)\n- Added `.of` and `.from` methods on collection constructors [stage 1 proposal](https://github.com/tc39/proposal-setmap-offrom):\n  - `Map.of`\n  - `Set.of`\n  - `WeakSet.of`\n  - `WeakMap.of`\n  - `Map.from`\n  - `Set.from`\n  - `WeakSet.from`\n  - `WeakMap.from`\n- Added `Math` extensions [stage 1 proposal](https://github.com/rwaldron/proposal-math-extensions), [#226](https://github.com/zloirock/core-js/issues/226):\n  - `Math.clamp`\n  - `Math.DEG_PER_RAD`\n  - `Math.degrees`\n  - `Math.fscale`\n  - `Math.RAD_PER_DEG`\n  - `Math.radians`\n  - `Math.scale`\n- Added `Math.signbit` [stage 1 proposal](http://jfbastien.github.io/papers/Math.signbit.html)\n- Updated `global` [stage 3 proposal](https://github.com/tc39/proposal-global) - added `global` global object, `System.global` deprecated\n- Updated `Object.getOwnPropertyDescriptors` to the [final version](https://tc39.github.io/ecma262/2017/#sec-object.getownpropertydescriptors) - it should not create properties if descriptors are `undefined`\n- Updated the list of iterable DOM collections, [#249](https://github.com/zloirock/core-js/issues/249), added:\n  - `CSSStyleDeclaration#@@iterator`\n  - `CSSValueList#@@iterator`\n  - `ClientRectList#@@iterator`\n  - `DOMRectList#@@iterator`\n  - `DOMStringList#@@iterator`\n  - `DataTransferItemList#@@iterator`\n  - `FileList#@@iterator`\n  - `HTMLAllCollection#@@iterator`\n  - `HTMLCollection#@@iterator`\n  - `HTMLFormElement#@@iterator`\n  - `HTMLSelectElement#@@iterator`\n  - `MimeTypeArray#@@iterator`\n  - `NamedNodeMap#@@iterator`\n  - `PaintRequestList#@@iterator`\n  - `Plugin#@@iterator`\n  - `PluginArray#@@iterator`\n  - `SVGLengthList#@@iterator`\n  - `SVGNumberList#@@iterator`\n  - `SVGPathSegList#@@iterator`\n  - `SVGPointList#@@iterator`\n  - `SVGStringList#@@iterator`\n  - `SVGTransformList#@@iterator`\n  - `SourceBufferList#@@iterator`\n  - `TextTrackCueList#@@iterator`\n  - `TextTrackList#@@iterator`\n  - `TouchList#@@iterator`\n- Updated stages of proposals:\n  - [`Object.getOwnPropertyDescriptors`](https://github.com/tc39/proposal-object-getownpropertydescriptors) to [stage 4 (ES2017)](https://tc39.github.io/ecma262/2017/#sec-object.getownpropertydescriptors)\n  - [String padding](https://github.com/tc39/proposal-string-pad-start-end) to [stage 4 (ES2017)](https://tc39.github.io/ecma262/2017/#sec-string.prototype.padend)\n  - [`global`](https://github.com/tc39/proposal-global) to [stage 3](https://github.com/rwaldron/tc39-notes/blob/master/es7/2016-09/sept-28.md#revisit-systemglobal--global)\n  - [String trimming](https://github.com/tc39/proposal-string-left-right-trim) to [stage 2](https://github.com/rwaldron/tc39-notes/blob/master/es7/2016-07/jul-27.md#10iic-trimstarttrimend)\n- Updated typed arrays to the modern (ES2016+) arguments validation, \n[#293](https://github.com/zloirock/core-js/pull/293)\n- Fixed `%TypedArray%.from` Safari bug, [#285](https://github.com/zloirock/core-js/issues/285)\n- Fixed compatibility with old version of Prototype.js, [#278](https://github.com/zloirock/core-js/issues/278), [#289](https://github.com/zloirock/core-js/issues/289)\n- `Function#name` no longer cache the result for correct behaviour with inherited constructors, [#296](https://github.com/zloirock/core-js/issues/296)\n- Added errors on incorrect context of collection methods, [#272](https://github.com/zloirock/core-js/issues/272)\n- Fixed conversion typed array constructors to string, fix [#300](https://github.com/zloirock/core-js/issues/300)\n- Fixed `Set#size` with debugger ReactNative for Android, [#297](https://github.com/zloirock/core-js/issues/297)\n- Fixed an issue with Electron-based debugger, [#230](https://github.com/zloirock/core-js/issues/230)\n- Fixed compatibility with incomplete third-party `WeakMap` polyfills, [#252](https://github.com/zloirock/core-js/pull/252)\n- Added a fallback for `Date#toJSON` in engines without native `Date#toISOString`, [#220](https://github.com/zloirock/core-js/issues/220)\n- Added support for Sphere Dispatch API, [#286](https://github.com/zloirock/core-js/pull/286)\n- Seriously changed the coding style and the [ESLint config](https://github.com/zloirock/core-js/blob/master/.eslintrc.js)\n- Updated many dev dependencies (`webpack`, `uglify`, etc)\n- Some other minor fixes and optimizations\n\n##### 2.4.1 - 2016.07.18\n- Fixed `script` tag for some parsers, [#204](https://github.com/zloirock/core-js/issues/204), [#216](https://github.com/zloirock/core-js/issues/216)\n- Removed some unused variables, [#217](https://github.com/zloirock/core-js/issues/217), [#218](https://github.com/zloirock/core-js/issues/218)\n- Fixed MS Edge `Reflect.construct` and `Reflect.apply` - they should not allow primitive as `argumentsList` argument\n\n##### 1.2.7 [LEGACY] - 2016.07.18\n- Some fixes for issues like [#159](https://github.com/zloirock/core-js/issues/159), [#186](https://github.com/zloirock/core-js/issues/186), [#194](https://github.com/zloirock/core-js/issues/194), [#207](https://github.com/zloirock/core-js/issues/207)\n\n##### 2.4.0 - 2016.05.08\n- Added `Observable`, [stage 1 proposal](https://github.com/zenparsing/es-observable)\n- Fixed behavior `Object.{getOwnPropertySymbols, getOwnPropertyDescriptor}` and `Object#propertyIsEnumerable` on `Object.prototype`\n- `Reflect.construct` and `Reflect.apply` should throw an error if `argumentsList` argument is not an object, [#194](https://github.com/zloirock/core-js/issues/194)\n\n##### 2.3.0 - 2016.04.24\n- Added `asap` for enqueuing microtasks, [stage 0 proposal](https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask)\n- Added well-known symbol `Symbol.asyncIterator` for [stage 2 async iteration proposal](https://github.com/tc39/proposal-async-iteration)\n- Added well-known symbol `Symbol.observable` for [stage 1 observables proposal](https://github.com/zenparsing/es-observable)\n- `String#{padStart, padEnd}` returns original string if filler is empty string, [TC39 meeting notes](https://github.com/rwaldron/tc39-notes/blob/master/es7/2016-03/march-29.md#stringprototypepadstartpadend)\n- `Object.values` and `Object.entries` moved to stage 4 from 3, [TC39 meeting notes](https://github.com/rwaldron/tc39-notes/blob/master/es7/2016-03/march-29.md#objectvalues--objectentries)\n- `System.global` moved to stage 2 from 1, [TC39 meeting notes](https://github.com/rwaldron/tc39-notes/blob/master/es7/2016-03/march-29.md#systemglobal)\n- `Map#toJSON` and `Set#toJSON` rejected and will be removed from the next major release, [TC39 meeting notes](https://github.com/rwaldron/tc39-notes/blob/master/es7/2016-03/march-31.md#mapprototypetojsonsetprototypetojson)\n- `Error.isError` withdrawn and will be removed from the next major release, [TC39 meeting notes](https://github.com/rwaldron/tc39-notes/blob/master/es7/2016-03/march-29.md#erroriserror)\n- Added fallback for `Function#name` on non-extensible functions and functions with broken `toString` conversion, [#193](https://github.com/zloirock/core-js/issues/193)\n\n##### 2.2.2 - 2016.04.06\n- Added conversion `-0` to `+0` to `Array#{indexOf, lastIndexOf}`, [ES2016 fix](https://github.com/tc39/ecma262/pull/316)\n- Added fixes for some `Math` methods in Tor Browser\n- `Array.{from, of}` no longer calls prototype setters\n- Added workaround over Chrome DevTools strange behavior, [#186](https://github.com/zloirock/core-js/issues/186)\n\n##### 2.2.1 - 2016.03.19\n- Fixed `Object.getOwnPropertyNames(window)` `2.1+` versions bug, [#181](https://github.com/zloirock/core-js/issues/181)\n\n##### 2.2.0 - 2016.03.15\n- Added `String#matchAll`, [proposal](https://github.com/tc39/String.prototype.matchAll)\n- Added `Object#__(define|lookup)[GS]etter__`, [annex B ES2017](https://github.com/tc39/ecma262/pull/381)\n- Added `@@toPrimitive` methods to `Date` and `Symbol`\n- Fixed `%TypedArray%#slice` in Edge ~ 13 (throws with `@@species` and wrapped / inherited constructor)\n- Some other minor fixes\n\n##### 2.1.5 - 2016.03.12\n- Improved support NodeJS domains in `Promise#then`, [#180](https://github.com/zloirock/core-js/issues/180)\n- Added fallback for `Date#toJSON` bug in Qt Script, [#173](https://github.com/zloirock/core-js/issues/173#issuecomment-193972502)\n\n##### 2.1.4 - 2016.03.08\n- Added fallback for `Symbol` polyfill in Qt Script, [#173](https://github.com/zloirock/core-js/issues/173)\n- Added one more fallback for IE11 `Script Access Denied` error with iframes, [#165](https://github.com/zloirock/core-js/issues/165)\n\n##### 2.1.3 - 2016.02.29\n- Added fallback for [`es6-promise` package bug](https://github.com/stefanpenner/es6-promise/issues/169), [#176](https://github.com/zloirock/core-js/issues/176)\n\n##### 2.1.2 - 2016.02.29\n- Some minor `Promise` fixes:\n  - Browsers `rejectionhandled` event better HTML spec complaint\n  - Errors in unhandled rejection handlers should not cause any problems\n  - Fixed typo in feature detection\n\n##### 2.1.1 - 2016.02.22\n- Some `Promise` improvements:\n  - Feature detection:\n    - **Added detection unhandled rejection tracking support - now it's available everywhere**, [#140](https://github.com/zloirock/core-js/issues/140)\n    - Added detection `@@species` pattern support for completely correct subclassing\n    - Removed usage `Object.setPrototypeOf` from feature detection and noisy console message about it in FF\n  - `Promise.all` fixed for some very specific cases\n\n##### 2.1.0 - 2016.02.09\n- **API**:\n  - ES5 polyfills are split and logic, used in other polyfills, moved to internal modules\n    - **All entry point works in ES3 environment like IE8- without `core-js/(library/)es5`**\n    - **Added all missed single entry points for ES5 polyfills**\n    - Separated ES5 polyfills moved to the ES6 namespace. Why?\n      - Mainly, for prevent duplication features in different namespaces - logic of most required ES5 polyfills changed in ES6+:\n        - Already added changes for: `Object` statics - should accept primitives, new whitespaces lists in `String#trim`, `parse(Int|float)`, `RegExp#toString` logic, `String#split`, etc\n        - Should be changed in the future: `@@species` and `ToLength` logic in `Array` methods, `Date` parsing, `Function#bind`, etc\n        - Should not be changed only several features like `Array.isArray` and `Date.now`\n      - Some ES5 polyfills required for modern engines\n    - All old entry points should work fine, but in the next major release API can be changed\n  - `Object.getOwnPropertyDescriptors` moved to the stage 3, [January TC39 meeting](https://github.com/rwaldron/tc39-notes/blob/master/es7/2016-01/2016-01-28.md#objectgetownpropertydescriptors-to-stage-3-jordan-harband-low-priority-but-super-quick)\n  - Added `umd` option for [custom build process](https://github.com/zloirock/core-js#custom-build-from-external-scripts), [#169](https://github.com/zloirock/core-js/issues/169)\n  - Returned entry points for `Array` statics, removed in `2.0`, for compatibility with `babel` `6` and for future fixes\n- **Deprecated**:\n  - `Reflect.enumerate` deprecated and will be removed from the next major release, [January TC39 meeting](https://github.com/rwaldron/tc39-notes/blob/master/es7/2016-01/2016-01-28.md#5xix-revisit-proxy-enumerate---revisit-decision-to-exhaust-iterator)\n- **New Features**:\n  - Added [`Reflect` metadata API](https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md) as a pre-strawman feature, [#152](https://github.com/zloirock/core-js/issues/152):\n    - `Reflect.defineMetadata`\n    - `Reflect.deleteMetadata`\n    - `Reflect.getMetadata`\n    - `Reflect.getMetadataKeys`\n    - `Reflect.getOwnMetadata`\n    - `Reflect.getOwnMetadataKeys`\n    - `Reflect.hasMetadata`\n    - `Reflect.hasOwnMetadata`\n    - `Reflect.metadata`\n  - Implementation / fixes `Date#toJSON`\n  - Fixes for `parseInt` and `Number.parseInt`\n  - Fixes for `parseFloat` and `Number.parseFloat`\n  - Fixes for `RegExp#toString`\n  - Fixes for `Array#sort`\n  - Fixes for `Number#toFixed`\n  - Fixes for `Number#toPrecision`\n  - Additional fixes for `String#split` (`RegExp#@@split`)\n- **Improvements**:\n  - Correct subclassing wrapped collections, `Number` and `RegExp` constructors with native class syntax\n  - Correct support `SharedArrayBuffer` and buffers from other realms in typed arrays wrappers \n  - Additional validations for `Object.{defineProperty, getOwnPropertyDescriptor}` and `Reflect.defineProperty`\n- **Bug Fixes**:\n  - Fixed some cases `Array#lastIndexOf` with negative second argument\n\n##### 2.0.3 - 2016.01.11\n- Added fallback for V8 ~ Chrome 49 `Promise` subclassing bug causes unhandled rejection on feature detection, [#159](https://github.com/zloirock/core-js/issues/159)\n- Added fix for very specific environments with global `window === null`\n\n##### 2.0.2 - 2016.01.04\n- Temporarily removed `length` validation from `Uint8Array` constructor wrapper. Reason - [bug in `ws` module](https://github.com/websockets/ws/pull/645) (-> `socket.io`) which passes to `Buffer` constructor -> `Uint8Array` float and uses [the `V8` bug](https://code.google.com/p/v8/issues/detail?id=4552) for conversion to int (by the spec should be thrown an error). [It creates problems for many people.](https://github.com/karma-runner/karma/issues/1768) I hope, it will be returned after fixing this bug in `V8`.\n\n##### 2.0.1 - 2015.12.31\n- Forced usage `Promise.resolve` polyfill in the `library` version for correct work with wrapper\n- `Object.assign` should be defined in the strict mode -> throw an error on extension non-extensible objects, [#154](https://github.com/zloirock/core-js/issues/154)\n\n##### 2.0.0 - 2015.12.24\n- Added implementations and fixes [Typed Arrays](https://github.com/zloirock/core-js#ecmascript-6-typed-arrays)-related features\n  - `ArrayBuffer`, `ArrayBuffer.isView`, `ArrayBuffer#slice`\n  - `DataView` with all getter / setter methods\n  - `Int8Array`, `Uint8Array`, `Uint8ClampedArray`, `Int16Array`, `Uint16Array`, `Int32Array`, `Uint32Array`, `Float32Array` and `Float64Array` constructors\n  - `%TypedArray%.{for, of}`, `%TypedArray%#{copyWithin, every, fill, filter, find, findIndex, forEach, indexOf, includes, join, lastIndexOf, map, reduce, reduceRight, reverse, set, slice, some, sort, subarray, values, keys, entries, @@iterator, ...}`\n- Added [`System.global`](https://github.com/zloirock/core-js#ecmascript-7-proposals), [proposal](https://github.com/tc39/proposal-global), [November TC39 meeting](https://github.com/rwaldron/tc39-notes/tree/master/es7/2015-11/nov-19.md#systemglobal-jhd)\n- Added [`Error.isError`](https://github.com/zloirock/core-js#ecmascript-7-proposals), [proposal](https://github.com/ljharb/proposal-is-error), [November TC39 meeting](https://github.com/rwaldron/tc39-notes/tree/master/es7/2015-11/nov-19.md#jhd-erroriserror)\n- Added [`Math.{iaddh, isubh, imulh, umulh}`](https://github.com/zloirock/core-js#ecmascript-7-proposals), [proposal](https://gist.github.com/BrendanEich/4294d5c212a6d2254703)\n- `RegExp.escape` moved from the `es7` to the non-standard `core` namespace, [July TC39 meeting](https://github.com/rwaldron/tc39-notes/blob/master/es7/2015-07/july-28.md#62-regexpescape) - too slow, but it's condition of stability, [#116](https://github.com/zloirock/core-js/issues/116)\n- [`Promise`](https://github.com/zloirock/core-js#ecmascript-6-promise)\n  - Some performance optimisations\n  - Added basic support [`rejectionHandled` event / `onrejectionhandled` handler](https://github.com/zloirock/core-js#unhandled-rejection-tracking) to the polyfill\n  - Removed usage `@@species` from `Promise.{all, race}`, [November TC39 meeting](https://github.com/rwaldron/tc39-notes/tree/master/es7/2015-11/nov-18.md#conclusionresolution-2)\n- Some improvements [collections polyfills](https://github.com/zloirock/core-js#ecmascript-6-collections)\n  - `O(1)` and preventing possible leaks with frozen keys, [#134](https://github.com/zloirock/core-js/issues/134)\n  - Correct observable state object keys\n- Renamed `String#{padLeft, padRight}` -> [`String#{padStart, padEnd}`](https://github.com/zloirock/core-js#ecmascript-7-proposals), [proposal](https://github.com/tc39/proposal-string-pad-start-end), [November TC39 meeting](https://github.com/rwaldron/tc39-notes/tree/master/es7/2015-11/nov-17.md#conclusionresolution-2) (they want to rename it on each meeting?O_o), [#132](https://github.com/zloirock/core-js/issues/132)\n- Added [`String#{trimStart, trimEnd}` as aliases for `String#{trimLeft, trimRight}`](https://github.com/zloirock/core-js#ecmascript-7-proposals), [proposal](https://github.com/sebmarkbage/ecmascript-string-left-right-trim), [November TC39 meeting](https://github.com/rwaldron/tc39-notes/tree/master/es7/2015-11/nov-17.md#conclusionresolution-2)\n- Added [annex B HTML methods](https://github.com/zloirock/core-js#ecmascript-6-string) - ugly, but also [the part of the spec](http://www.ecma-international.org/ecma-262/6.0/#sec-string.prototype.anchor)\n- Added little fix for [`Date#toString`](https://github.com/zloirock/core-js#ecmascript-6-date) - `new Date(NaN).toString()` [should be `'Invalid Date'`](http://www.ecma-international.org/ecma-262/6.0/#sec-todatestring)\n- Added [`{keys, values, entries, @@iterator}` methods to DOM collections](https://github.com/zloirock/core-js#iterable-dom-collections) which should have [iterable interface](https://heycam.github.io/webidl/#idl-iterable) or should be [inherited from `Array`](https://heycam.github.io/webidl/#LegacyArrayClass) - `NodeList`, `DOMTokenList`, `MediaList`, `StyleSheetList`, `CSSRuleList`.\n- Removed Mozilla `Array` generics - [deprecated and will be removed from FF](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array#Array_generic_methods), [looks like strawman is dead](http://wiki.ecmascript.org/doku.php?id=strawman:array_statics), available [alternative shim](https://github.com/plusdude/array-generics)\n- Removed `core.log` module\n- CommonJS API\n  - Added entry points for [virtual methods](https://github.com/zloirock/core-js#commonjs-and-prototype-methods-without-global-namespace-pollution)\n  - Added entry points for [stages proposals](https://github.com/zloirock/core-js#ecmascript-7-proposals)\n  - Some other minor changes\n- [Custom build from external scripts](https://github.com/zloirock/core-js#custom-build-from-external-scripts) moved to the separate package for preventing problems with dependencies\n- Changed `$` prefix for internal modules file names because Team Foundation Server does not support it, [#129](https://github.com/zloirock/core-js/issues/129)\n- Additional fix for `SameValueZero` in V8 ~ Chromium 39-42 collections\n- Additional fix for FF27 `Array` iterator\n- Removed usage shortcuts for `arguments` object - old WebKit bug, [#150](https://github.com/zloirock/core-js/issues/150)\n- `{Map, Set}#forEach` non-generic, [#144](https://github.com/zloirock/core-js/issues/144)\n- Many other improvements\n\n##### 1.2.6 - 2015.11.09\n* Reject with `TypeError` on attempt resolve promise itself\n* Correct behavior with broken `Promise` subclass constructors / methods\n* Added `Promise`-based fallback for microtask\n* Fixed V8 and FF `Array#{values, @@iterator}.name`\n* Fixed IE7- `[1, 2].join(undefined) -> '1,2'`\n* Some other fixes / improvements / optimizations\n\n##### 1.2.5 - 2015.11.02\n* Some more `Number` constructor fixes:\n  * Fixed V8 ~ Node 0.8 bug: `Number('+0x1')` should be `NaN`\n  * Fixed `Number(' 0b1\\n')` case, should be `1`\n  * Fixed `Number()` case, should be `0`\n\n##### 1.2.4 - 2015.11.01\n* Fixed `Number('0b12') -> NaN` case in the shim\n* Fixed V8 ~ Chromium 40- bug - `Weak(Map|Set)#{delete, get, has}` should not throw errors [#124](https://github.com/zloirock/core-js/issues/124)\n* Some other fixes and optimizations\n\n##### 1.2.3 - 2015.10.23\n* Fixed some problems related old V8 bug `Object('a').propertyIsEnumerable(0) // => false`, for example, `Object.assign({}, 'qwe')` from the last release\n* Fixed `.name` property and `Function#toString` conversion some polyfilled methods\n* Fixed `Math.imul` arity in Safari 8-\n\n##### 1.2.2 - 2015.10.18\n* Improved optimisations for V8\n* Fixed build process from external packages, [#120](https://github.com/zloirock/core-js/pull/120)\n* One more `Object.{assign, values, entries}` fix for [**very** specific case](https://github.com/ljharb/proposal-object-values-entries/issues/5)\n\n##### 1.2.1 - 2015.10.02\n* Replaced fix `JSON.stringify` + `Symbol` behavior from `.toJSON` method to wrapping `JSON.stringify` - little more correct, [compat-table/642](https://github.com/kangax/compat-table/pull/642)\n* Fixed typo which broke tasks scheduler in WebWorkers in old FF, [#114](https://github.com/zloirock/core-js/pull/114)\n\n##### 1.2.0 - 2015.09.27\n* Added browser [`Promise` rejection hook](#unhandled-rejection-tracking), [#106](https://github.com/zloirock/core-js/issues/106)\n* Added correct [`IsRegExp`](http://www.ecma-international.org/ecma-262/6.0/#sec-isregexp) logic to [`String#{includes, startsWith, endsWith}`](https://github.com/zloirock/core-js/#ecmascript-6-string) and [`RegExp` constructor](https://github.com/zloirock/core-js/#ecmascript-6-regexp), `@@match` case, [example](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/match#Disabling_the_isRegExp_check)\n* Updated [`String#leftPad`](https://github.com/zloirock/core-js/#ecmascript-7-proposals) [with proposal](https://github.com/ljharb/proposal-string-pad-left-right/issues/6): string filler truncated from the right side\n* Replaced V8 [`Object.assign`](https://github.com/zloirock/core-js/#ecmascript-6-object) - its properties order not only [incorrect](https://github.com/sindresorhus/object-assign/issues/22), it is non-deterministic and it causes some problems\n* Fixed behavior with deleted in getters properties for `Object.{`[`assign`](https://github.com/zloirock/core-js/#ecmascript-6-object)`, `[`entries, values`](https://github.com/zloirock/core-js/#ecmascript-7-proposals)`}`, [example](http://goo.gl/iQE01c)\n* Fixed [`Math.sinh`](https://github.com/zloirock/core-js/#ecmascript-6-math) with very small numbers in V8 near Chromium 38\n* Some other fixes and optimizations\n\n##### 1.1.4 - 2015.09.05\n* Fixed support symbols in FF34-35 [`Object.assign`](https://github.com/zloirock/core-js/#ecmascript-6-object)\n* Fixed [collections iterators](https://github.com/zloirock/core-js/#ecmascript-6-iterators) in FF25-26\n* Fixed non-generic WebKit [`Array.of`](https://github.com/zloirock/core-js/#ecmascript-6-array)\n* Some other fixes and optimizations\n\n##### 1.1.3 - 2015.08.29\n* Fixed support Node.js domains in [`Promise`](https://github.com/zloirock/core-js/#ecmascript-6-promise), [#103](https://github.com/zloirock/core-js/issues/103)\n\n##### 1.1.2 - 2015.08.28\n* Added `toJSON` method to [`Symbol`](https://github.com/zloirock/core-js/#ecmascript-6-symbol) polyfill and to MS Edge implementation for expected `JSON.stringify` result w/o patching this method\n* Replaced [`Reflect.construct`](https://github.com/zloirock/core-js/#ecmascript-6-reflect) implementations w/o correct support third argument\n* Fixed `global` detection with changed `document.domain` in ~IE8, [#100](https://github.com/zloirock/core-js/issues/100)\n\n##### 1.1.1 - 2015.08.20\n* Added more correct microtask implementation for [`Promise`](#ecmascript-6-promise)\n\n##### 1.1.0 - 2015.08.17\n* Updated [string padding](https://github.com/zloirock/core-js/#ecmascript-7-proposals) to [actual proposal](https://github.com/ljharb/proposal-string-pad-left-right) - renamed, minor internal changes:\n  * `String#lpad` -> `String#padLeft`\n  * `String#rpad` -> `String#padRight`\n* Added [string trim functions](#ecmascript-7-proposals) - [proposal](https://github.com/sebmarkbage/ecmascript-string-left-right-trim), defacto standard - required only for IE11- and fixed for some old engines:\n  * `String#trimLeft`\n  * `String#trimRight`\n* [`String#trim`](https://github.com/zloirock/core-js/#ecmascript-6-string) fixed for some engines by es6 spec and moved from `es5` to single `es6` module\n* Splitted [`es6.object.statics-accept-primitives`](https://github.com/zloirock/core-js/#ecmascript-6-object)\n* Caps for `freeze`-family `Object` methods moved from `es5` to `es6` namespace and joined with [es6 wrappers](https://github.com/zloirock/core-js/#ecmascript-6-object)\n* `es5` [namespace](https://github.com/zloirock/core-js/#commonjs) also includes modules, moved to `es6` namespace - you can use it as before\n* Increased `MessageChannel` priority in `$.task`, [#95](https://github.com/zloirock/core-js/issues/95)\n* Does not get `global.Symbol` on each getting iterator, if you wanna use alternative `Symbol` shim - add it before `core-js`\n* [`Reflect.construct`](https://github.com/zloirock/core-js/#ecmascript-6-reflect) optimized and fixed for some cases\n* Simplified [`Reflect.enumerate`](https://github.com/zloirock/core-js/#ecmascript-6-reflect), see [this question](https://esdiscuss.org/topic/question-about-enumerate-and-property-decision-timing)\n* Some corrections in [`Math.acosh`](https://github.com/zloirock/core-js/#ecmascript-6-math)\n* Fixed [`Math.imul`](https://github.com/zloirock/core-js/#ecmascript-6-math) for old WebKit\n* Some fixes in string / RegExp [well-known symbols](https://github.com/zloirock/core-js/#ecmascript-6-regexp) logic\n* Some other fixes and optimizations\n\n##### 1.0.1 - 2015.07.31\n* Some fixes for final MS Edge, replaced broken native `Reflect.defineProperty`\n* Some minor fixes and optimizations\n* Changed compression `client/*.min.js` options for safe `Function#name` and `Function#length`, should be fixed [#92](https://github.com/zloirock/core-js/issues/92)\n\n##### 1.0.0 - 2015.07.22\n* Added logic for [well-known symbols](https://github.com/zloirock/core-js/#ecmascript-6-regexp):\n  * `Symbol.match`\n  * `Symbol.replace`\n  * `Symbol.split`\n  * `Symbol.search`\n* Actualized and optimized work with iterables:\n  * Optimized  [`Map`, `Set`, `WeakMap`, `WeakSet` constructors](https://github.com/zloirock/core-js/#ecmascript-6-collections), [`Promise.all`, `Promise.race`](https://github.com/zloirock/core-js/#ecmascript-6-promise) for default `Array Iterator`\n  * Optimized  [`Array.from`](https://github.com/zloirock/core-js/#ecmascript-6-array) for default `Array Iterator`\n  * Added [`core.getIteratorMethod`](https://github.com/zloirock/core-js/#ecmascript-6-iterators) helper\n* Uses enumerable properties in shimmed instances - collections, iterators, etc for optimize performance\n* Added support native constructors to [`Reflect.construct`](https://github.com/zloirock/core-js/#ecmascript-6-reflect) with 2 arguments\n* Added support native constructors to [`Function#bind`](https://github.com/zloirock/core-js/#ecmascript-5) shim with `new`\n* Removed obsolete `.clear` methods native [`Weak`-collections](https://github.com/zloirock/core-js/#ecmascript-6-collections)\n* Maximum modularity, reduced minimal custom build size, separated into submodules:\n  * [`es6.reflect`](https://github.com/zloirock/core-js/#ecmascript-6-reflect)\n  * [`es6.regexp`](https://github.com/zloirock/core-js/#ecmascript-6-regexp)\n  * [`es6.math`](https://github.com/zloirock/core-js/#ecmascript-6-math)\n  * [`es6.number`](https://github.com/zloirock/core-js/#ecmascript-6-number)\n  * [`es7.object.to-array`](https://github.com/zloirock/core-js/#ecmascript-7-proposals)\n  * [`core.object`](https://github.com/zloirock/core-js/#object)\n  * [`core.string`](https://github.com/zloirock/core-js/#escaping-strings)\n  * [`core.iter-helpers`](https://github.com/zloirock/core-js/#ecmascript-6-iterators)\n  * Internal modules (`$`, `$.iter`, etc)\n* Many other optimizations\n* Final cleaning non-standard features\n  * Moved `$for` to [separate library](https://github.com/zloirock/forof). This work for syntax - `for-of` loop and comprehensions\n  * Moved `Date#{format, formatUTC}` to [separate library](https://github.com/zloirock/dtf). Standard way for this - `ECMA-402`\n  * Removed `Math` methods from `Number.prototype`. Slight sugar for simple `Math` methods calling\n  * Removed `{Array#, Array, Dict}.turn`\n  * Removed `core.global`\n* Uses `ToNumber` instead of `ToLength` in [`Number Iterator`](https://github.com/zloirock/core-js/#number-iterator), `Array.from(2.5)` will be `[0, 1, 2]` instead of `[0, 1]`\n* Fixed [#85](https://github.com/zloirock/core-js/issues/85) - invalid `Promise` unhandled rejection message in nested `setTimeout`\n* Fixed [#86](https://github.com/zloirock/core-js/issues/86) - support FF extensions\n* Fixed [#89](https://github.com/zloirock/core-js/issues/89) - behavior `Number` constructor in strange case\n\n##### 0.9.18 - 2015.06.17\n* Removed `/` from [`RegExp.escape`](https://github.com/zloirock/core-js/#ecmascript-7-proposals) escaped characters\n\n##### 0.9.17 - 2015.06.14\n* Updated [`RegExp.escape`](https://github.com/zloirock/core-js/#ecmascript-7-proposals) to the [latest proposal](https://github.com/benjamingr/RexExp.escape)\n* Fixed conflict with webpack dev server + IE buggy behavior\n\n##### 0.9.16 - 2015.06.11\n* More correct order resolving thenable in [`Promise`](https://github.com/zloirock/core-js/#ecmascript-6-promise) polyfill\n* Uses polyfill instead of [buggy V8 `Promise`](https://github.com/zloirock/core-js/issues/78)\n\n##### 0.9.15 - 2015.06.09\n* [Collections](https://github.com/zloirock/core-js/#ecmascript-6-collections) from `library` version return wrapped native instances\n* Fixed collections prototype methods in `library` version\n* Optimized [`Math.hypot`](https://github.com/zloirock/core-js/#ecmascript-6-math)\n\n##### 0.9.14 - 2015.06.04\n* Updated [`Promise.resolve` behavior](https://esdiscuss.org/topic/fixing-promise-resolve)\n* Added fallback for IE11 buggy `Object.getOwnPropertyNames` + iframe\n* Some other fixes\n\n##### 0.9.13 - 2015.05.25\n* Added fallback for [`Symbol` polyfill](https://github.com/zloirock/core-js/#ecmascript-6-symbol) for old Android\n* Some other fixes\n\n##### 0.9.12 - 2015.05.24\n* Different instances `core-js` should use / recognize the same symbols\n* Some fixes\n\n##### 0.9.11 - 2015.05.18\n* Simplified [custom build](https://github.com/zloirock/core-js/#custom-build)\n  * Added custom build js api\n  * Added `grunt-cli` to `devDependencies` for `npm run grunt`\n* Some fixes\n\n##### 0.9.10 - 2015.05.16\n* Wrapped `Function#toString` for correct work wrapped methods / constructors with methods similar to the [`lodash` `isNative`](https://github.com/lodash/lodash/issues/1197)\n* Added proto versions of methods to export object in `default` version for consistency with `library` version\n\n##### 0.9.9 - 2015.05.14\n* Wrapped `Object#propertyIsEnumerable` for [`Symbol` polyfill](https://github.com/zloirock/core-js/#ecmascript-6-symbol)\n* [Added proto versions of methods to `library` for ES7 bind syntax](https://github.com/zloirock/core-js/issues/65)\n* Some other fixes\n\n##### 0.9.8 - 2015.05.12\n* Fixed [`Math.hypot`](https://github.com/zloirock/core-js/#ecmascript-6-math) with negative arguments\n* Added `Object#toString.toString` as fallback for [`lodash` `isNative`](https://github.com/lodash/lodash/issues/1197)\n\n##### 0.9.7 - 2015.05.07\n* Added [support DOM collections](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice#Streamlining_cross-browser_behavior) to IE8- `Array#slice`\n\n##### 0.9.6 - 2015.05.01\n* Added [`String#lpad`, `String#rpad`](https://github.com/zloirock/core-js/#ecmascript-7-proposals)\n\n##### 0.9.5 - 2015.04.30\n* Added cap for `Function#@@hasInstance`\n* Some fixes and optimizations\n\n##### 0.9.4 - 2015.04.27\n* Fixed `RegExp` constructor\n\n##### 0.9.3 - 2015.04.26\n* Some fixes and optimizations\n\n##### 0.9.2 - 2015.04.25\n* More correct [`Promise`](https://github.com/zloirock/core-js/#ecmascript-6-promise) unhandled rejection tracking and resolving / rejection priority\n\n##### 0.9.1 - 2015.04.25\n* Fixed `__proto__`-based [`Promise`](https://github.com/zloirock/core-js/#ecmascript-6-promise) subclassing in some environments\n\n##### 0.9.0 - 2015.04.24\n* Added correct [symbols](https://github.com/zloirock/core-js/#ecmascript-6-symbol) descriptors\n  * Fixed behavior `Object.{assign, create, defineProperty, defineProperties, getOwnPropertyDescriptor, getOwnPropertyDescriptors}` with symbols\n  * Added [single entry points](https://github.com/zloirock/core-js/#commonjs) for `Object.{create, defineProperty, defineProperties}`\n* Added [`Map#toJSON`](https://github.com/zloirock/core-js/#ecmascript-7-proposals)\n* Removed non-standard methods `Object#[_]` and `Function#only` - they solves syntax problems, but now in compilers available arrows and ~~in near future will be available~~ [available](http://babeljs.io/blog/2015/05/14/function-bind/) [bind syntax](https://github.com/zenparsing/es-function-bind)\n* Removed non-standard undocumented methods `Symbol.{pure, set}`\n* Some fixes and internal changes\n\n##### 0.8.4 - 2015.04.18\n* Uses `webpack` instead of `browserify` for browser builds - more compression-friendly result\n\n##### 0.8.3 - 2015.04.14\n* Fixed `Array` statics with single entry points\n\n##### 0.8.2 - 2015.04.13\n* [`Math.fround`](https://github.com/zloirock/core-js/#ecmascript-6-math) now also works in IE9-\n* Added [`Set#toJSON`](https://github.com/zloirock/core-js/#ecmascript-7-proposals)\n* Some optimizations and fixes\n\n##### 0.8.1 - 2015.04.03\n* Fixed `Symbol.keyFor`\n\n##### 0.8.0 - 2015.04.02\n* Changed [CommonJS API](https://github.com/zloirock/core-js/#commonjs)\n* Splitted and renamed some modules\n* Added support ES3 environment (ES5 polyfill) to **all** default versions - size increases slightly (+ ~4kb w/o gzip), many issues disappear, if you don't need it - [simply include only required namespaces / features / modules](https://github.com/zloirock/core-js/#commonjs)\n* Removed [abstract references](https://github.com/zenparsing/es-abstract-refs) support - proposal has been superseded =\\\n* [`$for.isIterable` -> `core.isIterable`, `$for.getIterator` -> `core.getIterator`](https://github.com/zloirock/core-js/#ecmascript-6-iterators), temporary available in old namespace\n* Fixed iterators support in v8 `Promise.all` and `Promise.race`\n* Many other fixes\n\n##### 0.7.2 - 2015.03.09\n* Some fixes\n\n##### 0.7.1 - 2015.03.07\n* Some fixes\n\n##### 0.7.0 - 2015.03.06\n* Rewritten and splitted into [CommonJS modules](https://github.com/zloirock/core-js/#commonjs)\n\n##### 0.6.1 - 2015.02.24\n* Fixed support [`Object.defineProperty`](https://github.com/zloirock/core-js/#ecmascript-5) with accessors on DOM elements on IE8\n\n##### 0.6.0 - 2015.02.23\n* Added support safe closing iteration - calling `iterator.return` on abort iteration, if it exists\n* Added basic support [`Promise`](https://github.com/zloirock/core-js/#ecmascript-6-promise) unhandled rejection tracking in shim\n* Added [`Object.getOwnPropertyDescriptors`](https://github.com/zloirock/core-js/#ecmascript-7-proposals)\n* Removed `console` cap - creates too many problems\n* Restructuring [namespaces](https://github.com/zloirock/core-js/#custom-build)\n* Some fixes\n\n##### 0.5.4 - 2015.02.15\n* Some fixes\n\n##### 0.5.3 - 2015.02.14\n* Added [support binary and octal literals](https://github.com/zloirock/core-js/#ecmascript-6-number) to `Number` constructor\n* Added [`Date#toISOString`](https://github.com/zloirock/core-js/#ecmascript-5)\n\n##### 0.5.2 - 2015.02.10\n* Some fixes\n\n##### 0.5.1 - 2015.02.09\n* Some fixes\n\n##### 0.5.0 - 2015.02.08\n* Systematization of modules\n* Splitted [`es6` module](https://github.com/zloirock/core-js/#ecmascript-6)\n* Splitted `console` module: `web.console` - only cap for missing methods, `core.log` - bound methods & additional features\n* Added [`delay` method](https://github.com/zloirock/core-js/#delay)\n* Some fixes\n\n##### 0.4.10 - 2015.01.28\n* [`Object.getOwnPropertySymbols`](https://github.com/zloirock/core-js/#ecmascript-6-symbol) polyfill returns array of wrapped keys\n\n##### 0.4.9 - 2015.01.27\n* FF20-24 fix\n\n##### 0.4.8 - 2015.01.25\n* Some [collections](https://github.com/zloirock/core-js/#ecmascript-6-collections) fixes\n\n##### 0.4.7 - 2015.01.25\n* Added support frozen objects as [collections](https://github.com/zloirock/core-js/#ecmascript-6-collections) keys\n\n##### 0.4.6 - 2015.01.21\n* Added [`Object.getOwnPropertySymbols`](https://github.com/zloirock/core-js/#ecmascript-6-symbol)\n* Added [`NodeList.prototype[@@iterator]`](https://github.com/zloirock/core-js/#ecmascript-6-iterators)\n* Added basic `@@species` logic - getter in native constructors\n* Removed `Function#by`\n* Some fixes\n\n##### 0.4.5 - 2015.01.16\n* Some fixes\n\n##### 0.4.4 - 2015.01.11\n* Enabled CSP support\n\n##### 0.4.3 - 2015.01.10\n* Added `Function` instances `name` property for IE9+\n\n##### 0.4.2 - 2015.01.10\n* `Object` static methods accept primitives\n* `RegExp` constructor can alter flags (IE9+)\n* Added `Array.prototype[Symbol.unscopables]`\n\n##### 0.4.1 - 2015.01.05\n* Some fixes\n\n##### 0.4.0 - 2015.01.03\n* Added [`es6.reflect`](https://github.com/zloirock/core-js/#ecmascript-6-reflect) module:\n  * Added `Reflect.apply`\n  * Added `Reflect.construct`\n  * Added `Reflect.defineProperty`\n  * Added `Reflect.deleteProperty`\n  * Added `Reflect.enumerate`\n  * Added `Reflect.get`\n  * Added `Reflect.getOwnPropertyDescriptor`\n  * Added `Reflect.getPrototypeOf`\n  * Added `Reflect.has`\n  * Added `Reflect.isExtensible`\n  * Added `Reflect.preventExtensions`\n  * Added `Reflect.set`\n  * Added `Reflect.setPrototypeOf`\n* `core-js` methods now can use external `Symbol.iterator` polyfill\n* Some fixes\n\n##### 0.3.3 - 2014.12.28\n* [Console cap](https://github.com/zloirock/core-js/#console) excluded from node.js default builds\n\n##### 0.3.2 - 2014.12.25\n* Added cap for [ES5](https://github.com/zloirock/core-js/#ecmascript-5) freeze-family methods\n* Fixed `console` bug\n\n##### 0.3.1 - 2014.12.23\n* Some fixes\n\n##### 0.3.0 - 2014.12.23\n* Optimize [`Map` & `Set`](https://github.com/zloirock/core-js/#ecmascript-6-collections):\n  * Use entries chain on hash table\n  * Fast & correct iteration\n  * Iterators moved to [`es6`](https://github.com/zloirock/core-js/#ecmascript-6) and [`es6.collections`](https://github.com/zloirock/core-js/#ecmascript-6-collections) modules\n\n##### 0.2.5 - 2014.12.20\n* `console` no longer shortcut for `console.log` (compatibility problems)\n* Some fixes\n\n##### 0.2.4 - 2014.12.17\n* Better compliance of ES6\n* Added [`Math.fround`](https://github.com/zloirock/core-js/#ecmascript-6-math) (IE10+)\n* Some fixes\n\n##### 0.2.3 - 2014.12.15\n* [Symbols](https://github.com/zloirock/core-js/#ecmascript-6-symbol):\n  * Added option to disable addition setter to `Object.prototype` for Symbol polyfill:\n    * Added `Symbol.useSimple`\n    * Added `Symbol.useSetter`\n  * Added cap for well-known Symbols:\n    * Added `Symbol.hasInstance`\n    * Added `Symbol.isConcatSpreadable`\n    * Added `Symbol.match`\n    * Added `Symbol.replace`\n    * Added `Symbol.search`\n    * Added `Symbol.species`\n    * Added `Symbol.split`\n    * Added `Symbol.toPrimitive`\n    * Added `Symbol.unscopables`\n\n##### 0.2.2 - 2014.12.13\n* Added [`RegExp#flags`](https://github.com/zloirock/core-js/#ecmascript-6-regexp) ([December 2014 Draft Rev 29](http://wiki.ecmascript.org/doku.php?id=harmony:specification_drafts#december_6_2014_draft_rev_29))\n* Added [`String.raw`](https://github.com/zloirock/core-js/#ecmascript-6-string)\n\n##### 0.2.1 - 2014.12.12\n* Repair converting -0 to +0 in [native collections](https://github.com/zloirock/core-js/#ecmascript-6-collections)\n\n##### 0.2.0 - 2014.12.06\n* Added [`es7.proposals`](https://github.com/zloirock/core-js/#ecmascript-7-proposals) and [`es7.abstract-refs`](https://github.com/zenparsing/es-abstract-refs) modules\n* Added [`String#at`](https://github.com/zloirock/core-js/#ecmascript-7-proposals)\n* Added real [`String Iterator`](https://github.com/zloirock/core-js/#ecmascript-6-iterators), older versions used Array Iterator\n* Added abstract references support:\n  * Added `Symbol.referenceGet`\n  * Added `Symbol.referenceSet`\n  * Added `Symbol.referenceDelete`\n  * Added `Function#@@referenceGet`\n  * Added `Map#@@referenceGet`\n  * Added `Map#@@referenceSet`\n  * Added `Map#@@referenceDelete`\n  * Added `WeakMap#@@referenceGet`\n  * Added `WeakMap#@@referenceSet`\n  * Added `WeakMap#@@referenceDelete`\n  * Added `Dict.{...methods}[@@referenceGet]`\n* Removed deprecated `.contains` methods\n* Some fixes\n\n##### 0.1.5 - 2014.12.01\n* Added [`Array#copyWithin`](https://github.com/zloirock/core-js/#ecmascript-6-array)\n* Added [`String#codePointAt`](https://github.com/zloirock/core-js/#ecmascript-6-string)\n* Added [`String.fromCodePoint`](https://github.com/zloirock/core-js/#ecmascript-6-string)\n\n##### 0.1.4 - 2014.11.27\n* Added [`Dict.mapPairs`](https://github.com/zloirock/core-js/#dict)\n\n##### 0.1.3 - 2014.11.20\n* [TC39 November meeting](https://github.com/rwaldron/tc39-notes/tree/master/es6/2014-11):\n  * [`.contains` -> `.includes`](https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-11/nov-18.md#51--44-arrayprototypecontains-and-stringprototypecontains)\n    * `String#contains` -> [`String#includes`](https://github.com/zloirock/core-js/#ecmascript-6-string)\n    * `Array#contains` -> [`Array#includes`](https://github.com/zloirock/core-js/#ecmascript-7-proposals)\n    * `Dict.contains` -> [`Dict.includes`](https://github.com/zloirock/core-js/#dict)\n  * [Removed `WeakMap#clear`](https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-11/nov-19.md#412-should-weakmapweakset-have-a-clear-method-markm)\n  * [Removed `WeakSet#clear`](https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-11/nov-19.md#412-should-weakmapweakset-have-a-clear-method-markm)\n\n##### 0.1.2 - 2014.11.19\n* `Map` & `Set` bug fix\n\n##### 0.1.1 - 2014.11.18\n* Public release"}});
//# sourceMappingURL=148.3826f513.chunk.js.map