webpackJsonp([143],{788:function(e,n,r){var t=r(15),o=r(45),s=r(286).PageRenderer;s.__esModule&&(s=s.default);var i=o({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:r(945)}},componentWillMount:function(){},render:function(){return t.createElement(s,Object.assign({},this.props,{content:this.state.content}))}});i.__catalog_loader__=!0,e.exports=i},945:function(e,n){e.exports="# copy(src, dest, [options, callback])\n\nCopy a file or directory. The directory can have contents. Like `cp -r`.\n\n- `src` `<String>`\n- `dest` `<String>` Note that if `src` is a file, `dest` cannot be a directory (see [issue #323](https://github.com/jprichardson/node-fs-extra/issues/323)).\n- `options` `<Object>`\n  - `overwrite` `<boolean>`: overwrite existing file or directory, default is `true`. _Note that the copy operation will silently fail if you set this to `false` and the destination exists._ Use the `errorOnExist` option to change this behavior.\n  - `errorOnExist` `<boolean>`: when `overwrite` is `false` and the destination exists, throw an error. Default is `false`.\n  - `dereference` `<boolean>`: dereference symlinks, default is `false`.\n  - `preserveTimestamps` `<boolean>`: will set last modification and access times to the ones of the original source files, default is `false`.\n  - `filter` `<Function>`: Function to filter copied files. Return `true` to include, `false` to exclude. This can also be a RegExp, however this is deprecated (See [issue #239](https://github.com/jprichardson/node-fs-extra/issues/239) for background).\n- `callback` `<Function>`\n\n## Example:\n\n```js\nconst fs = require('fs-extra')\n\nfs.copy('/tmp/myfile', '/tmp/mynewfile', err => {\n  if (err) return console.error(err)\n\n  console.log('success!')\n}) // copies file\n\nfs.copy('/tmp/mydir', '/tmp/mynewdir', err => {\n  if (err) return console.error(err)\n\n  console.log('success!')\n}) // copies directory, even if it has subdirectories or files\n\n// Promise usage:\nfs.copy('/tmp/myfile', '/tmp/mynewfile')\n.then(() => {\n  console.log('success!')\n})\n.catch(err => {\n  console.error(err)\n})\n```\n\n**Using filter function**\n\n```js\nconst fs = require('fs-extra')\n\nconst filterFunc = (src, dest) => {\n  // your logic here\n  // it will be copied if return true\n}\n\nfs.copy('/tmp/mydir', '/tmp/mynewdir', { filter: filterFunc }, err => {\n  if (err) return console.error(err)\n\n  console.log('success!')\n})\n```\n"}});
//# sourceMappingURL=143.b1f4b841.chunk.js.map