{"version":3,"sources":["webpack:///static/106.80b32415.chunk.js","webpack:////Users/roca/o-rango/o-rango-components/components/o-alert/node_modules/jsonfile/README.md?95a5","webpack:////Users/roca/o-rango/o-rango-components/components/o-alert/node_modules/jsonfile/README.md"],"names":["webpackJsonp","825","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","982"],"mappings":"AAAAA,cAAc,MAERC,IACA,SAAUC,EAAQC,EAASC,GCFjC,GAAAC,GAAgBD,EAAQ,IACxBE,EAA2BF,EAAQ,IACnCG,EAAuBH,EAAQ,KAASG,YACxCA,GAAAC,aACAD,IAAAE,QAEA,IAAAC,GAAAJ,GACAK,YAAA,sBACAC,gBAAA,WACA,OAAgBC,QAAST,EAAQ,OAEjCU,mBAAA,aAUAC,OAAA,WACA,MAAAV,GAAAW,cAAAT,EAAAU,OAAAC,UAAiEC,KAAAC,OAAeP,QAAAM,KAAAE,MAAAR,aAGhFH,GAAAY,oBAAA,EACApB,EAAAC,QAAAO,GDUMa,IACA,SAAUrB,EAAQC,GEtCxBD,EAAAC,QAAA","file":"static/106.80b32415.chunk.js","sourcesContent":["webpackJsonp([106],{\n\n/***/ 825:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(15);\n    var createReactClass = __webpack_require__(45);\n    var PageRenderer = __webpack_require__(286).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(982)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../../../../docs/catalog/node_modules/raw-loader/index.js!./README.md\", function() {\n            component.setState({\n              content: require(\"!!../../../../docs/catalog/node_modules/raw-loader/index.js!./README.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 982:\n/***/ (function(module, exports) {\n\nmodule.exports = \"Node.js - jsonfile\\n================\\n\\nEasily read/write JSON files.\\n\\n[![npm Package](https://img.shields.io/npm/v/jsonfile.svg?style=flat-square)](https://www.npmjs.org/package/jsonfile)\\n[![build status](https://secure.travis-ci.org/jprichardson/node-jsonfile.svg)](http://travis-ci.org/jprichardson/node-jsonfile)\\n[![windows Build status](https://img.shields.io/appveyor/ci/jprichardson/node-jsonfile/master.svg?label=windows%20build)](https://ci.appveyor.com/project/jprichardson/node-jsonfile/branch/master)\\n\\n<a href=\\\"https://github.com/feross/standard\\\"><img src=\\\"https://cdn.rawgit.com/feross/standard/master/sticker.svg\\\" alt=\\\"Standard JavaScript\\\" width=\\\"100\\\"></a>\\n\\nWhy?\\n----\\n\\nWriting `JSON.stringify()` and then `fs.writeFile()` and `JSON.parse()` with `fs.readFile()` enclosed in `try/catch` blocks became annoying.\\n\\n\\n\\nInstallation\\n------------\\n\\n    npm install --save jsonfile\\n\\n\\n\\nAPI\\n---\\n\\n### readFile(filename, [options], callback)\\n\\n`options` (`object`, default `undefined`): Pass in any `fs.readFile` options or set `reviver` for a [JSON reviver](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse).\\n  - `throws` (`boolean`, default: `true`). If `JSON.parse` throws an error, pass this error to the callback.\\n  If `false`, returns `null` for the object.\\n\\n\\n```js\\nvar jsonfile = require('jsonfile')\\nvar file = '/tmp/data.json'\\njsonfile.readFile(file, function(err, obj) {\\n  console.dir(obj)\\n})\\n```\\n\\n\\n### readFileSync(filename, [options])\\n\\n`options` (`object`, default `undefined`): Pass in any `fs.readFileSync` options or set `reviver` for a [JSON reviver](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse).\\n- `throws` (`boolean`, default: `true`). If an error is encountered reading or parsing the file, throw the error. If `false`, returns `null` for the object.\\n\\n```js\\nvar jsonfile = require('jsonfile')\\nvar file = '/tmp/data.json'\\n\\nconsole.dir(jsonfile.readFileSync(file))\\n```\\n\\n\\n### writeFile(filename, obj, [options], callback)\\n\\n`options`: Pass in any `fs.writeFile` options or set `replacer` for a [JSON replacer](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify). Can also pass in `spaces` and override `EOL` string.\\n\\n\\n```js\\nvar jsonfile = require('jsonfile')\\n\\nvar file = '/tmp/data.json'\\nvar obj = {name: 'JP'}\\n\\njsonfile.writeFile(file, obj, function (err) {\\n  console.error(err)\\n})\\n```\\n\\n**formatting with spaces:**\\n\\n```js\\nvar jsonfile = require('jsonfile')\\n\\nvar file = '/tmp/data.json'\\nvar obj = {name: 'JP'}\\n\\njsonfile.writeFile(file, obj, {spaces: 2}, function(err) {\\n  console.error(err)\\n})\\n```\\n\\n**overriding EOL:**\\n\\n```js\\nvar jsonfile = require('jsonfile')\\n\\nvar file = '/tmp/data.json'\\nvar obj = {name: 'JP'}\\n\\njsonfile.writeFile(file, obj, {spaces: 2, EOL: '\\\\r\\\\n'}, function(err) {\\n  console.error(err)\\n})\\n```\\n\\n**appending to an existing JSON file:**\\n\\nYou can use `fs.writeFile` option `{flag: 'a'}` to achieve this.\\n\\n```js\\nvar jsonfile = require('jsonfile')\\n\\nvar file = '/tmp/mayAlreadyExistedData.json'\\nvar obj = {name: 'JP'}\\n\\njsonfile.writeFile(file, obj, {flag: 'a'}, function (err) {\\n  console.error(err)\\n})\\n```\\n\\n### writeFileSync(filename, obj, [options])\\n\\n`options`: Pass in any `fs.writeFileSync` options or set `replacer` for a [JSON replacer](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify). Can also pass in `spaces` and override `EOL` string.\\n\\n```js\\nvar jsonfile = require('jsonfile')\\n\\nvar file = '/tmp/data.json'\\nvar obj = {name: 'JP'}\\n\\njsonfile.writeFileSync(file, obj)\\n```\\n\\n**formatting with spaces:**\\n\\n```js\\nvar jsonfile = require('jsonfile')\\n\\nvar file = '/tmp/data.json'\\nvar obj = {name: 'JP'}\\n\\njsonfile.writeFileSync(file, obj, {spaces: 2})\\n```\\n\\n**overriding EOL:**\\n\\n```js\\nvar jsonfile = require('jsonfile')\\n\\nvar file = '/tmp/data.json'\\nvar obj = {name: 'JP'}\\n\\njsonfile.writeFileSync(file, obj, {spaces: 2, EOL: '\\\\r\\\\n'})\\n```\\n\\n**appending to an existing JSON file:**\\n\\nYou can use `fs.writeFileSync` option `{flag: 'a'}` to achieve this.\\n\\n```js\\nvar jsonfile = require('jsonfile')\\n\\nvar file = '/tmp/mayAlreadyExistedData.json'\\nvar obj = {name: 'JP'}\\n\\njsonfile.writeFileSync(file, obj, {flag: 'a'})\\n```\\n\\nLicense\\n-------\\n\\n(MIT License)\\n\\nCopyright 2012-2016, JP Richardson  <jprichardson@gmail.com>\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/106.80b32415.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../../../../docs/catalog/node_modules/raw-loader/index.js!./README.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../../../../docs/catalog/node_modules/raw-loader/index.js!./README.md\", function() {\n            component.setState({\n              content: require(\"!!../../../../docs/catalog/node_modules/raw-loader/index.js!./README.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/roca/o-rango/o-rango-components/components/o-alert/node_modules/jsonfile/README.md\n// module id = 825\n// module chunks = 106","module.exports = \"Node.js - jsonfile\\n================\\n\\nEasily read/write JSON files.\\n\\n[![npm Package](https://img.shields.io/npm/v/jsonfile.svg?style=flat-square)](https://www.npmjs.org/package/jsonfile)\\n[![build status](https://secure.travis-ci.org/jprichardson/node-jsonfile.svg)](http://travis-ci.org/jprichardson/node-jsonfile)\\n[![windows Build status](https://img.shields.io/appveyor/ci/jprichardson/node-jsonfile/master.svg?label=windows%20build)](https://ci.appveyor.com/project/jprichardson/node-jsonfile/branch/master)\\n\\n<a href=\\\"https://github.com/feross/standard\\\"><img src=\\\"https://cdn.rawgit.com/feross/standard/master/sticker.svg\\\" alt=\\\"Standard JavaScript\\\" width=\\\"100\\\"></a>\\n\\nWhy?\\n----\\n\\nWriting `JSON.stringify()` and then `fs.writeFile()` and `JSON.parse()` with `fs.readFile()` enclosed in `try/catch` blocks became annoying.\\n\\n\\n\\nInstallation\\n------------\\n\\n    npm install --save jsonfile\\n\\n\\n\\nAPI\\n---\\n\\n### readFile(filename, [options], callback)\\n\\n`options` (`object`, default `undefined`): Pass in any `fs.readFile` options or set `reviver` for a [JSON reviver](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse).\\n  - `throws` (`boolean`, default: `true`). If `JSON.parse` throws an error, pass this error to the callback.\\n  If `false`, returns `null` for the object.\\n\\n\\n```js\\nvar jsonfile = require('jsonfile')\\nvar file = '/tmp/data.json'\\njsonfile.readFile(file, function(err, obj) {\\n  console.dir(obj)\\n})\\n```\\n\\n\\n### readFileSync(filename, [options])\\n\\n`options` (`object`, default `undefined`): Pass in any `fs.readFileSync` options or set `reviver` for a [JSON reviver](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse).\\n- `throws` (`boolean`, default: `true`). If an error is encountered reading or parsing the file, throw the error. If `false`, returns `null` for the object.\\n\\n```js\\nvar jsonfile = require('jsonfile')\\nvar file = '/tmp/data.json'\\n\\nconsole.dir(jsonfile.readFileSync(file))\\n```\\n\\n\\n### writeFile(filename, obj, [options], callback)\\n\\n`options`: Pass in any `fs.writeFile` options or set `replacer` for a [JSON replacer](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify). Can also pass in `spaces` and override `EOL` string.\\n\\n\\n```js\\nvar jsonfile = require('jsonfile')\\n\\nvar file = '/tmp/data.json'\\nvar obj = {name: 'JP'}\\n\\njsonfile.writeFile(file, obj, function (err) {\\n  console.error(err)\\n})\\n```\\n\\n**formatting with spaces:**\\n\\n```js\\nvar jsonfile = require('jsonfile')\\n\\nvar file = '/tmp/data.json'\\nvar obj = {name: 'JP'}\\n\\njsonfile.writeFile(file, obj, {spaces: 2}, function(err) {\\n  console.error(err)\\n})\\n```\\n\\n**overriding EOL:**\\n\\n```js\\nvar jsonfile = require('jsonfile')\\n\\nvar file = '/tmp/data.json'\\nvar obj = {name: 'JP'}\\n\\njsonfile.writeFile(file, obj, {spaces: 2, EOL: '\\\\r\\\\n'}, function(err) {\\n  console.error(err)\\n})\\n```\\n\\n**appending to an existing JSON file:**\\n\\nYou can use `fs.writeFile` option `{flag: 'a'}` to achieve this.\\n\\n```js\\nvar jsonfile = require('jsonfile')\\n\\nvar file = '/tmp/mayAlreadyExistedData.json'\\nvar obj = {name: 'JP'}\\n\\njsonfile.writeFile(file, obj, {flag: 'a'}, function (err) {\\n  console.error(err)\\n})\\n```\\n\\n### writeFileSync(filename, obj, [options])\\n\\n`options`: Pass in any `fs.writeFileSync` options or set `replacer` for a [JSON replacer](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify). Can also pass in `spaces` and override `EOL` string.\\n\\n```js\\nvar jsonfile = require('jsonfile')\\n\\nvar file = '/tmp/data.json'\\nvar obj = {name: 'JP'}\\n\\njsonfile.writeFileSync(file, obj)\\n```\\n\\n**formatting with spaces:**\\n\\n```js\\nvar jsonfile = require('jsonfile')\\n\\nvar file = '/tmp/data.json'\\nvar obj = {name: 'JP'}\\n\\njsonfile.writeFileSync(file, obj, {spaces: 2})\\n```\\n\\n**overriding EOL:**\\n\\n```js\\nvar jsonfile = require('jsonfile')\\n\\nvar file = '/tmp/data.json'\\nvar obj = {name: 'JP'}\\n\\njsonfile.writeFileSync(file, obj, {spaces: 2, EOL: '\\\\r\\\\n'})\\n```\\n\\n**appending to an existing JSON file:**\\n\\nYou can use `fs.writeFileSync` option `{flag: 'a'}` to achieve this.\\n\\n```js\\nvar jsonfile = require('jsonfile')\\n\\nvar file = '/tmp/mayAlreadyExistedData.json'\\nvar obj = {name: 'JP'}\\n\\njsonfile.writeFileSync(file, obj, {flag: 'a'})\\n```\\n\\nLicense\\n-------\\n\\n(MIT License)\\n\\nCopyright 2012-2016, JP Richardson  <jprichardson@gmail.com>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!/Users/roca/o-rango/o-rango-components/components/o-alert/node_modules/jsonfile/README.md\n// module id = 982\n// module chunks = 106"],"sourceRoot":""}